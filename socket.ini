[build]
; ssc will copy everything in this directory to the build output directory.
; This is useful when you want to avoid bundling or want to use tools like
; vite, webpack, rollup, etc. to build your project and then copy output to
; the Socket bundle resources directory.
; default value: "src"
copy = "src"
; Advanced Compiler Settings (ie C++ compiler -02, -03, etc).
flags = -O3
; The name of the program and executable to be output. Can't contain spaces or special characters. Required field.
name = "socket-service-worker-weather-example"
; The binary output path. It's recommended to add this path to .gitignore.
; default value: "build"
output = "build"
; The build script. It runs before the `[build] copy` phase.
; script = "npm run build"
env[] = OPENWEATHER_API_KEY

[build.copy-map]
; node module dependencies
node_modules/x-weather = "node_modules/x-weather/"
node_modules/hono = "node_modules/hono/"
; assets
icons = "icons/"

; importmap configuration for webview only environmenrt
importmap.json = "importmap.json"
; ESM/CommonJS configuration for app module
package.json = "package.json"

[webview]
; Make root open index.html
; default value: "/"
root = "/"
; Set importmap
importmap = "importmap.json"

[webview.protocol-handlers]
; Registers the `weather://` protocol handler
weather = "/protocols/weather/handler.js"

[debug]
; Advanced Compiler Settings for debug purposes (ie C++ compiler -g, etc).
flags = "-g"

[meta]
; A unique ID that identifies the bundle (used by all app stores).
; It's required when `[meta] type` is not `"extension"`.
; It should be in a reverse DNS notation https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleidentifier#discussion
bundle_identifier = "co.socketsupply.weather-example"
; A unique application protocol scheme to support deep linking
; If this value is not defined, then it is derived from the `[meta] bundle_identifier` value
application_protocol = "socket-weather"
; A string that gets used in the about dialog and package meta info.
copyright = "(c) Socket Supply, Co. 2024"
; A short description of the app.
description = "An example Socket Runtime Weather application"
; Set the limit of files that can be opened by your process.
file_limit = 1024
; Localization
lang = "en-us"
; A String used in the about dialog and meta info.
maintainer = "Socket Supply, Co."
; The title of the app used in metadata files. This is NOT a window title. Can contain spaces and special characters. Defaults to name in a [build] section.
title = "Socket Runtime Weather Example"
; A string that indicates the version of the application. It should be a semver triple like 1.2.3. Defaults to 1.0.0.
version = 1.0.0

[android]
; The icon to use for identifying your app on Android.
icon = "icons/icon.png"
; The various sizes and scales of the icons to create, required minimum are listed by default.
icon_sizes = "512@1x"

[ios]
; Describes how Xcode should export the archive. Available options: app-store, package, release-testing, enterprise, development, and developer-id.
distribution_method = "release-testing"
; which device to target when building for the simulator.
simulator_device = "iPhone 14"
; The icon to use for identifying your app on iOS.
icon = "icons/icon.png"
; The various sizes and scales of the icons to create, required minimum are listed by default.
icon_sizes = "29@1x 29@2x 29@3x 40@2x 40@3x 57@1x 57@2x 60@2x 60@3x"

[linux]
; The icon to use for identifying your app in Linux desktop environments.
icon = "icons/icon.png"
; The various sizes and scales of the icons to create, required minimum are listed by default.
icon_sizes = "512@1x"

[mac]
; The icon to use for identifying your app on MacOS.
icon = "icons/icon.png"
; The various sizes and scales of the icons to create, required minimum are listed by default.
icon_sizes = "16@1x 32@1x 128@1x"


[win]
; The icon to use for identifying your app on Windows, relative to copied path resources
logo = "icons/icon.ico"
; The icon to use for identifying your app on Windows.
icon = "icons/icon.ico"
; The various sizes and scales of the icons to create, required minimum are listed by default.
icon_sizes = "512@1x"

[window]
; The initial height of the first window in pixels or as a percentage of the screen.
height = 60%
; The initial width of the first window in pixels or as a percentage of the screen.
width = 20%
; Determine if the titlebar style (hidden, hiddenInset)
; default value: ""
titlebar_style = "hiddenInset"

[tray]
; The icon to be displayed in the operating system tray. On Windows, you may need to use ICO format.
; defalut value = ""
icon = "icons/icon.png"
